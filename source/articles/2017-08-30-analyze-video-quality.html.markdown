---

title: トランスコード後ビデオの画質評価とノイズ検出
date: 2017-08-30 10:00 JST
tags: SSIM, PSNR, ffmpeg, Noise

---

動画のトランスコード後に、もとの素材からどのくらい画質劣化が発生したのかを調べる方法について調べた。
画質の評価方法にはいくつか種類があるが、今回はPSNRとSSIMを利用し映像劣化やノイズがどの程度検出できるのかについて検証した。

検証の結果、SSIMやPSNRといった指標を活用することで、
トランスコード後のノイズ（ブロックノイズやモスキートノイズ等）の検出が可能かもしれないということがわかった。


## はじめに

ProResやHDxHDと言った中間コーデックは無圧縮の動画並みの品質を持っているが、そのまま配信するにはデータ量が大きすぎる。
動画をエンドユーザに配信するためには、コンテンツをMPEG2やH.264といった配信用のフォーマットに変換する必要がある。

MPEGやh264は編集には適さないが、高い映像品質を維持したままデータサイズを大幅に抑えることができるため、
テレビ放送やBD/DVD、及びVODなどの動画配信サービスで利用されている。 
これらのフォーマットでは、元の素材から人間にはわかりづらい領域のデータを削ったり、
前後のフレームからの差分情報だけを保持するなどしてデータ量削減を行っている。

データ量を抑えようとすればするほどより多くの情報を削るため、
動画のトランスコードの仕方によっては目に見えて映像劣化がわかってしまう。
これらの劣化は、ブロックノイズやモスキートノイズとなって映像に現れる。
動きの早いシーンではフレーム間予測がうまく働かずにデータ量が増えてしまうが、
映像に割り当てられるデータ量には上限があるため、こういったシーンではノイズがより多く発生する可能性がある。
また色の移り変わりの激しい箇所やシーンでも同様にノイズが発生する可能性がある。

今回はffmpeg及びPSNRとSSIMを使いトランスコード前の素材から、トランスコード後の映像がどの程度劣化したかを調べる方法を調査した。
また、トランスコード後の動画のノイズ検出についての調査考察を行った。

## ピークS/N比, PSNR

ピークS/N比はPSNR(Peak singal-to-noise Ratio)とも呼ばれるが、画質評価のための指標である。
元の画像と圧縮後の画像を比較し、どの程度品質が劣化したのかを評価する。

ピークS/N比の前に、単純なS/N比について説明する。
S/N比とは信号(Signal)と雑音(Noise)の比率のことであり、以下の式で表される。P\_s は 元の信号、P\_n はノイズであり、結果の単位はdBで表される。

<center>

![SN Ratio](articles/image/snratio_wiki.png)

図: S/N比 [Wikipedia SN]より引用

</center>

S/N比を用いることで、雑音の影響がどの程度あるのかを評価することができる。
雑音P\_n が限りなく0に近い場合はノイズがほぼないということであり、この場合はS/N比は無限に近づく。
すなわち、**S/N比が大きければ大きいほど、ノイズが少ない**ということである。

次にピークS/N比について説明する。ピークS/N比は以下式で表される。

<center>

![PSNR](articles/image/psnr02.png)

図: ピークS/N比 [Wikipedia PSNR]より引用

</center>

ここでいうMAX\_I は元(入力)の画像の最大画素値である。
8ビットの画像ならば、MAX\_Iは255の値を取ることとなる。
MSEとは平均二乗誤差のことであるが、これは以下のように表現される。

<center>

![PSNR MSE](articles/image/psnr01.png)

図: ピークS/N比 MSE [Wikipedia PSNR]より引用

</center>

I(i,j)は入力画像の1画素(位置はX座標i, Y座標jとする）、K(i,j)は変換後画像の1画素を表す。
話を単純にするために、モノクロ画像の画像を評価することを考える。
I(i,j)は元の画像の1画素の明るさであり、例えば0-255までの値をとることとする。K(i,j)は変換後の1画素をあらわし、これも0-255までとることとする。
I(i,j) から K(i,j) を引くことにより、元の画素との違い（すなわち誤差）がわかる。

次に全体を二乗し1/mn をかけているが、これは平均二乗誤差である。
平均二乗誤差は統計ではデータ全体のばらつきをもとめる際に利用される。
詳しくは統計の書籍を参考にしていただきたいが、ばらつきを求める際、単純にすべての値を足し引きしていくと誤差が正しく検出できない。
例えば、とある値は誤差+10 であり、別の値では誤差-10 と検出された場合、すべてを足し合わせると0となってしまい誤差は無いように見えてしまう。
二乗し平均を取ることで、ばらつきを適切に検出することができる。

これらを踏まえてもう一度PSNRの式をみてみる。
S/N比のS(元の信号)にあたる部分が元の画像の最大画素値、そしてN(雑音)に当たる部分がもとの画像と出力後の画像との差分である。
**雑音が少なければ少ない(すなわち元の画像との差分が少ない）ほど、PSNRは大きな値を取る**こととなる。

[JIMA guideline]によると、PSNR の数値目安は以下のとおりである。

<center>

| PSNR [dB] | 主観評価 |
|:----:|:--------:|
|40 〜 ∞ | 元の画像と圧縮画像の区別がつかない |
|30 〜 40 | 拡大すれば劣化がわかるレベル |
|30以下| 明らかに劣化がわかる |

</center>

### PSNR の利点・欠点

PSNR の計算式をみてわかるが、画像全体のノイズ（画像劣化）を求めて値を算出している。
すなわち、動画や画像が全体的に劣化している場合はPSNRが低い値がでることになる。
**全体的な画質の評価を行う場合、PSNRを用いるのは有効な手段**である。

一方、画像をみて劣化していると感じるのは、全体的なものよりも画像の部分的なノイズかもしれない。
**ブロックノイズやモスキートノイズが部分的に発生している場合は、PSNRではうまく劣化を検出できない**こととなる。


## Structural Similarity, SSIM

PSNRでは、部分的な画像劣化の検出が難しいことがわかった。
この欠点を解決した画質評価の手法が、SSIM (Structural Similarity) である。

SSIMの計算式は以下のとおりであるが、これはPSNRと違い式をみただけでは直感的にはよくわからない。

<center>

![SSIM](articles/image/ssim_algo.png)

図: SSIM [Wikipedia SSIM]より引用

</center>

書いている本人も意味は理解はしていないので、詳しい説明は専門書を参考されたい。

SSIMでは画像全体の誤差を利用するのではなく、元の画像と出力後の画像の局所的な領域の誤差を求めていく。
そしてそれらの平均をとり最終的なSSIM値を求めている。
これにより**部分的にノイズが発生している場合もうまく検出が可能**となる。

SSIMの場合、値は1 〜 0の範囲を取ることとなる。
1が最も高品質（画像劣化のない状態）であり、0が最も低品質である。
[JIMA guideline]によると、SSIMの数値目安は以下のとおりである。

<center>

| SSIM | 主観評価 |
|:----:|:--------:|
|0.98以上 | 元の画像と圧縮画像の区別がつかない |
|0.90 〜 0.98 | 拡大すれば劣化がわかるレベル |
|0.90以下 | 明らかに劣化がわかる |

</center>


## PSNR, SSIM によるトランスコード後の動画のノイズ検知

PSNR, SSIMを用いることで、画像の劣化を評価できることがわかった。
画像の劣化がわかるということは、すなわち動画トランスコード後のブロックノイズやモスキートノイズなども検出できる可能性がある。
ここで、どの程度のノイズが検出できるのか検証を行ってみることとする。

### 検証データ


## 参考文献

- [Wikipedia SN] Wikipedia SN比, [https://ja.wikipedia.org/wiki/SN%E6%AF%94](https://ja.wikipedia.org/wiki/SN%E6%AF%94), 2017/08/30 アクセス
- [Wikipedia PSNR] Wikipedia ピーク信号対雑音比, [https://ja.wikipedia.org/wiki/%E3%83%94%E3%83%BC%E3%82%AF%E4%BF%A1%E5%8F%B7%E5%AF%BE%E9%9B%91%E9%9F%B3%E6%AF%94](https://ja.wikipedia.org/wiki/%E3%83%94%E3%83%BC%E3%82%AF%E4%BF%A1%E5%8F%B7%E5%AF%BE%E9%9B%91%E9%9F%B3%E6%AF%94), 2017/08/30 アクセス
- [JIMA guideline] 小箱雅彦, 電子化文書の画像圧縮ガイドライン、[http://www.jiima.or.jp/pdf/5_JIIMA_guideline.pdf](http://www.jiima.or.jp/pdf/5_JIIMA_guideline.pdf), 2017/08/30 アクセス
- [Wikipedia SSIM] Wikipedia Structural similarity, [https://en.wikipedia.org/wiki/Structural_similarity](https://en.wikipedia.org/wiki/Structural_similarity), 2017/08/30 アクセス
